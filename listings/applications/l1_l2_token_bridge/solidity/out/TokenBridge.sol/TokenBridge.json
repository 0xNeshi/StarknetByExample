{"abi":[{"type":"constructor","inputs":[{"name":"snMessaging","type":"address","internalType":"address"},{"name":"l2Bridge","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"consumeMessage","inputs":[{"name":"fromAddress","type":"uint256","internalType":"uint256"},{"name":"payload","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initiate_withdraw","inputs":[{"name":"recipientAddress","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"error","name":"InvalidPayload","inputs":[]}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b50604051610411380380610411833981016040819052602c916088565b600180546001600160a01b039485166001600160a01b03199182161790915560008054928516928216929092179091556002805492909316911617905560c4565b80516001600160a01b0381168114608357600080fd5b919050565b600080600060608486031215609c57600080fd5b60a384606d565b925060af60208501606d565b915060bb60408501606d565b90509250925092565b61033e806100d36000396000f3fe6080604052600436106100295760003560e01c8063c5780d621461002e578063df46e31414610050575b600080fd5b34801561003a57600080fd5b5061004e6100493660046101f5565b610063565b005b61004e61005e366004610276565b61018e565b60015460405162b2775760e61b81526001600160a01b0390911690632c9dd5c09061009690869086908690600401610298565b6020604051808303816000875af11580156100b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d991906102d9565b50600281146100fb57604051637c6953f960e01b815260040160405180910390fd5b600082826000818110610110576101106102f2565b90506020020135905060008383600181811061012e5761012e6102f2565b9050602002013590506000821180156101475750600081115b6101875760405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642076616c756560981b604482015260640160405180910390fd5b5050505050565b6040805160018082528183019092526000916020808301908036833701905050905082816000815181106101c4576101c46102f2565b60200260200101818152505081816001815181106101e4576101e46102f2565b602002602001018181525050505050565b60008060006040848603121561020a57600080fd5b83359250602084013567ffffffffffffffff81111561022857600080fd5b8401601f8101861361023957600080fd5b803567ffffffffffffffff81111561025057600080fd5b8660208260051b840101111561026557600080fd5b939660209190910195509293505050565b6000806040838503121561028957600080fd5b50508035926020909101359150565b838152604060208201819052810182905260006001600160fb1b038311156102bf57600080fd5b8260051b8085606085013791909101606001949350505050565b6000602082840312156102eb57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fdfea264697066735822122014c098fc88d65dbb8bc54fab528c9d074965b0e60eea689048daeefc89de0e3864736f6c634300081c0033","sourceMap":"339:2422:27:-:0;;;741:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;817:12;:46;;-1:-1:-1;;;;;817:46:27;;;-1:-1:-1;;;;;;817:46:27;;;;;;;:12;873:38;;;;;;;;;;;;;;;921:9;:20;;;;;;;;;;;339:2422;;14:177:29;93:13;;-1:-1:-1;;;;;135:31:29;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;339:2422:27;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436106100295760003560e01c8063c5780d621461002e578063df46e31414610050575b600080fd5b34801561003a57600080fd5b5061004e6100493660046101f5565b610063565b005b61004e61005e366004610276565b61018e565b60015460405162b2775760e61b81526001600160a01b0390911690632c9dd5c09061009690869086908690600401610298565b6020604051808303816000875af11580156100b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d991906102d9565b50600281146100fb57604051637c6953f960e01b815260040160405180910390fd5b600082826000818110610110576101106102f2565b90506020020135905060008383600181811061012e5761012e6102f2565b9050602002013590506000821180156101475750600081115b6101875760405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642076616c756560981b604482015260640160405180910390fd5b5050505050565b6040805160018082528183019092526000916020808301908036833701905050905082816000815181106101c4576101c46102f2565b60200260200101818152505081816001815181106101e4576101e46102f2565b602002602001018181525050505050565b60008060006040848603121561020a57600080fd5b83359250602084013567ffffffffffffffff81111561022857600080fd5b8401601f8101861361023957600080fd5b803567ffffffffffffffff81111561025057600080fd5b8660208260051b840101111561026557600080fd5b939660209190910195509293505050565b6000806040838503121561028957600080fd5b50508035926020909101359150565b838152604060208201819052810182905260006001600160fb1b038311156102bf57600080fd5b8260051b8085606085013791909101606001949350505050565b6000602082840312156102eb57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fdfea264697066735822122014c098fc88d65dbb8bc54fab528c9d074965b0e60eea689048daeefc89de0e3864736f6c634300081c0033","sourceMap":"339:2422:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;2251:508;;;;;;;;;;-1:-1:-1;2251:508:27;;;;;:::i;:::-;;:::i;:::-;;1388:382;;;;;;:::i;:::-;;:::i;2251:508::-;2422:12;;:55;;-1:-1:-1;;;2422:55:27;;-1:-1:-1;;;;;2422:12:27;;;;:33;;:55;;2456:11;;2469:7;;;;2422:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2587:1:27;2569:19;;2565:73;;2611:16;;-1:-1:-1;;;2611:16:27;;;;;;;;;;;2565:73;2648:9;2660:7;;2668:1;2660:10;;;;;;;:::i;:::-;;;;;;;2648:22;;2680:9;2692:7;;2700:1;2692:10;;;;;;;:::i;:::-;;;;;;;2680:22;;2724:1;2720;:5;:14;;;;;2733:1;2729;:5;2720:14;2712:40;;;;-1:-1:-1;;;2712:40:27;;2136:2:29;2712:40:27;;;2118:21:29;2175:2;2155:18;;;2148:30;-1:-1:-1;;;2194:18:29;;;2187:43;2247:18;;2712:40:27;;;;;;;;2355:404;;2251:508;;;:::o;1388:382::-;1533:16;;;1547:1;1533:16;;;;;;;;;1506:24;;1533:16;;;;;;;;;;;-1:-1:-1;1533:16:27;1506:43;;1572:16;1559:7;1567:1;1559:10;;;;;;;;:::i;:::-;;;;;;:29;;;;;1611:6;1598:7;1606:1;1598:10;;;;;;;;:::i;:::-;;;;;;:19;;;;;1496:274;1388:382;;:::o;14:724:29:-;109:6;117;125;178:2;166:9;157:7;153:23;149:32;146:52;;;194:1;191;184:12;146:52;239:23;;;-1:-1:-1;337:2:29;322:18;;309:32;364:18;353:30;;350:50;;;396:1;393;386:12;350:50;419:22;;472:4;464:13;;460:27;-1:-1:-1;450:55:29;;501:1;498;491:12;450:55;541:2;528:16;567:18;559:6;556:30;553:50;;;599:1;596;589:12;553:50;652:7;647:2;637:6;634:1;630:14;626:2;622:23;618:32;615:45;612:65;;;673:1;670;663:12;612:65;14:724;;704:2;696:11;;;;;-1:-1:-1;726:6:29;;-1:-1:-1;;;14:724:29:o;743:346::-;811:6;819;872:2;860:9;851:7;847:23;843:32;840:52;;;888:1;885;878:12;840:52;-1:-1:-1;;933:23:29;;;1053:2;1038:18;;;1025:32;;-1:-1:-1;743:346:29:o;1094:514::-;1293:25;;;1354:2;1349;1334:18;;1327:30;;;1373:18;;1366:34;;;-1:-1:-1;;;;;;1412:31:29;;1409:51;;;1456:1;1453;1446:12;1409:51;1490:6;1487:1;1483:14;1547:6;1539;1534:2;1523:9;1519:18;1506:48;1575:22;;;;1599:2;1571:31;;1094:514;-1:-1:-1;;;;1094:514:29:o;1613:184::-;1683:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:52;;;1752:1;1749;1742:12;1704:52;-1:-1:-1;1775:16:29;;1613:184;-1:-1:-1;1613:184:29:o;1802:127::-;1863:10;1858:3;1854:20;1851:1;1844:31;1894:4;1891:1;1884:15;1918:4;1915:1;1908:15","linkReferences":{}},"methodIdentifiers":{"consumeMessage(uint256,uint256[])":"c5780d62","initiate_withdraw(uint256,uint256)":"df46e314"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"snMessaging\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"l2Bridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"payload\",\"type\":\"uint256[]\"}],\"name\":\"consumeMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"recipientAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initiate_withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"l2Bridge\":\"The address of Starknet bridge contract.\",\"snMessaging\":\"The address of Starknet Core contract, responsible for messaging.\",\"token\":\"The address of token to be briged.\"}},\"consumeMessage(uint256,uint256[])\":{\"details\":\"A message \\\"receive\\\" means that the message hash is registered as consumable. One must provide the message content, to let Starknet Core contract verify the hash and validate the message content before being consumed.\",\"params\":{\"fromAddress\":\"L2 contract (account) that has sent the message.\",\"payload\":\"Payload of the message used to verify the hash.\"}},\"initiate_withdraw(uint256,uint256)\":{\"details\":\"Consider that Cairo only understands felts252. So the serialization on solidity must be adjusted. For instance, a uint256 must be split in two uint256 with low and high part to be understood by Cairo.\",\"params\":{\"amount\":\"The l1_handler function of the contract to call.\",\"recipientAddress\":\"The contract's address on starknet.\"}}},\"title\":\"Test contract to receive / send messages to starknet.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor.\"},\"consumeMessage(uint256,uint256[])\":{\"notice\":\"Manually consumes a message that was received from L2.\"},\"initiate_withdraw(uint256,uint256)\":{\"notice\":\"Sends a message to Starknet contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TokenBridge.sol\":\"TokenBridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/IMintableToken.sol\":{\"keccak256\":\"0x02f25adb375b42fde342c3e0ea171a8a76e6460a026014c0aa44445827f97b10\",\"license\":\"MIT.\",\"urls\":[\"bzz-raw://9ee17a8635e14a498adf5abf60c098409c4f5b58f4e1486a4793fb060dfe67da\",\"dweb:/ipfs/QmWutqbTYEKHAuMf1p4VgXShkemLS1WpnQ7sksEM3Ns2sn\"]},\"src/IStarknetMessaging.sol\":{\"keccak256\":\"0xd64bf11d79b5938d4715b8044cac3c36f89b9a93317cb5f6832e97404e28ef46\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://1b16fca79790bc93fb5ef0feea54ec1e9b555d99a5fc4431db275fcfcdd0aa9f\",\"dweb:/ipfs/QmVD7Y4NtAARQt8o3LhiRChoXPkpHQSGsK3CXbA2SS3q83\"]},\"src/IStarknetMessagingEvents.sol\":{\"keccak256\":\"0xeb4457ba46200509b45076779c397c2be51689d1bed54a189db443f8ed7bf15e\",\"license\":\"Apache-2.0.\",\"urls\":[\"bzz-raw://232ba6016dc89f873eee98b2a83eedfc8ed57b75df873caff5f0049aa1defd7f\",\"dweb:/ipfs/QmZMPXVyvbNeo27TV2w1a1iiBZETKYj2RJa5CaqEQcToZm\"]},\"src/TokenBridge.sol\":{\"keccak256\":\"0x35c759919a405111f19bc580e8fe7429387910f72da6421c505423f6897b6b02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccce5104ec32e9a9da33a30dffbfaec92b33bc73290c8d2a90ef75a54c24dd56\",\"dweb:/ipfs/QmPysmTiZfdAYjm4LNxpcwYrAPiEGm9R4nsnHDRzvTggGw\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"snMessaging","type":"address"},{"internalType":"address","name":"l2Bridge","type":"address"},{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"InvalidPayload"},{"inputs":[{"internalType":"uint256","name":"fromAddress","type":"uint256"},{"internalType":"uint256[]","name":"payload","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"consumeMessage"},{"inputs":[{"internalType":"uint256","name":"recipientAddress","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"initiate_withdraw"}],"devdoc":{"kind":"dev","methods":{"constructor":{"params":{"l2Bridge":"The address of Starknet bridge contract.","snMessaging":"The address of Starknet Core contract, responsible for messaging.","token":"The address of token to be briged."}},"consumeMessage(uint256,uint256[])":{"details":"A message \"receive\" means that the message hash is registered as consumable. One must provide the message content, to let Starknet Core contract verify the hash and validate the message content before being consumed.","params":{"fromAddress":"L2 contract (account) that has sent the message.","payload":"Payload of the message used to verify the hash."}},"initiate_withdraw(uint256,uint256)":{"details":"Consider that Cairo only understands felts252. So the serialization on solidity must be adjusted. For instance, a uint256 must be split in two uint256 with low and high part to be understood by Cairo.","params":{"amount":"The l1_handler function of the contract to call.","recipientAddress":"The contract's address on starknet."}}},"version":1},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Constructor."},"consumeMessage(uint256,uint256[])":{"notice":"Manually consumes a message that was received from L2."},"initiate_withdraw(uint256,uint256)":{"notice":"Sends a message to Starknet contract."}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/TokenBridge.sol":"TokenBridge"},"evmVersion":"paris","libraries":{}},"sources":{"src/IMintableToken.sol":{"keccak256":"0x02f25adb375b42fde342c3e0ea171a8a76e6460a026014c0aa44445827f97b10","urls":["bzz-raw://9ee17a8635e14a498adf5abf60c098409c4f5b58f4e1486a4793fb060dfe67da","dweb:/ipfs/QmWutqbTYEKHAuMf1p4VgXShkemLS1WpnQ7sksEM3Ns2sn"],"license":"MIT."},"src/IStarknetMessaging.sol":{"keccak256":"0xd64bf11d79b5938d4715b8044cac3c36f89b9a93317cb5f6832e97404e28ef46","urls":["bzz-raw://1b16fca79790bc93fb5ef0feea54ec1e9b555d99a5fc4431db275fcfcdd0aa9f","dweb:/ipfs/QmVD7Y4NtAARQt8o3LhiRChoXPkpHQSGsK3CXbA2SS3q83"],"license":"Apache-2.0."},"src/IStarknetMessagingEvents.sol":{"keccak256":"0xeb4457ba46200509b45076779c397c2be51689d1bed54a189db443f8ed7bf15e","urls":["bzz-raw://232ba6016dc89f873eee98b2a83eedfc8ed57b75df873caff5f0049aa1defd7f","dweb:/ipfs/QmZMPXVyvbNeo27TV2w1a1iiBZETKYj2RJa5CaqEQcToZm"],"license":"Apache-2.0."},"src/TokenBridge.sol":{"keccak256":"0x35c759919a405111f19bc580e8fe7429387910f72da6421c505423f6897b6b02","urls":["bzz-raw://ccce5104ec32e9a9da33a30dffbfaec92b33bc73290c8d2a90ef75a54c24dd56","dweb:/ipfs/QmPysmTiZfdAYjm4LNxpcwYrAPiEGm9R4nsnHDRzvTggGw"],"license":"MIT"}},"version":1},"id":27}